# Задача №1
# Бинарный поиск
# Контекст
# Предположим, что мы хотим найти элемент в массиве (получить 
# его индекс). Мы можем это сделать просто перебрав все элементы. 
# Но что, если массив уже отсортирован? В этом случае можно 
# использовать бинарный поиск. Принцип прост: сначала берём 
# элемент находящийся посередине и сравниваем с тем, который мы 
# хотим найти. Если центральный элемент больше нашего, 
# рассматриваем массив слева от центрального, а если больше - 
# справа и повторяем так до тех пор, пока не найдем наш элемент.

# Ваша задача
# Написать программу на любом языке в любой парадигме для 
# бинарного поиска. На вход подаётся целочисленный массив и 
# число. На выходе - индекс элемента или -1, в случае если искомого 
# элемента нет в массиве.



# В программе используется структурная и процедурная парадигма программирования

def binary_search(list, number):
    low = 0
    high = len(list) - 1

    while low <= high:
        middle = (low + high) // 2
        guess = list[middle]
        if guess == number:
            return middle
        if guess > number:
            high = middle - 1
        else:
            low = middle + 1
    return -1


list = [1, 2, 3, 6, 12, 25, 34, 43, 56, 67, 81]
number = 12

print (binary_search(list, number))
